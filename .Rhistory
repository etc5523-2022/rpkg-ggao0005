direction = 1) +
theme_minimal() +
theme(legend.position = "none",
text = element_text(size = 17))
}
else(
return('Sorry, there is no information about the wines of this country available here.'))
}
boxPlot("NA")
boxPlot("China")
boxPlot <- function(input_country){
if(input_country %in% wine$country) {
data <- wine %>%
filter(!country %in% c("NA", "China")) %>%
filter(country == input_country)
data %>%
mutate(points = factor(points,
levels = sort(unique(points)))) %>%
ggplot(aes(x = points,
y = price)) +
geom_boxplot(aes(fill = as.numeric(as.character(points)))) +
scale_y_sqrt() +
labs(x = "Point",
y = "Price") +
coord_flip() +
scale_fill_distiller(palette = "Reds",
direction = 1) +
theme_minimal() +
theme(legend.position = "none",
text = element_text(size = 17))
}
else(
return('Sorry, there is no information about the wines of this country available here.'))
}
boxPlot("China")
boxPlot <- function(input_country){
if(input_country %in% wine$country) {
data <- wine %>%
filter(country == input_country) %>%
filter(!country %in% c("NA", "China"))
data %>%
mutate(points = factor(points,
levels = sort(unique(points)))) %>%
ggplot(aes(x = points,
y = price)) +
geom_boxplot(aes(fill = as.numeric(as.character(points)))) +
scale_y_sqrt() +
labs(x = "Point",
y = "Price") +
coord_flip() +
scale_fill_distiller(palette = "Reds",
direction = 1) +
theme_minimal() +
theme(legend.position = "none",
text = element_text(size = 17))
}
else(
return('Sorry, there is no information about the wines of this country available here.'))
}
boxPlot("China")
boxPlot <- function(input_country){
if(input_country %in% wine$country) {
data <- wine %>%
filter(country == input_country) %>%
filter(!is.na(country))
data %>%
mutate(points = factor(points,
levels = sort(unique(points)))) %>%
ggplot(aes(x = points,
y = price)) +
geom_boxplot(aes(fill = as.numeric(as.character(points)))) +
scale_y_sqrt() +
labs(x = "Point",
y = "Price") +
coord_flip() +
scale_fill_distiller(palette = "Reds",
direction = 1) +
theme_minimal() +
theme(legend.position = "none",
text = element_text(size = 17))
}
else(
return('Sorry, there is no information about the wines of this country available here.'))
}
boxPlot("NA")
boxPlot("China")
boxPlot <- function(input_country){
if(input_country %in% wine$country) {
data <- wine %>%
filter(country == input_country) %>%
filter(!is.na(country))
data %>%
mutate(points = factor(points,
levels = sort(unique(points)))) %>%
ggplot(aes(x = points,
y = price)) +
geom_boxplot(aes(fill = as.numeric(as.character(points)))) +
scale_y_sqrt() +
labs(x = "Point",
y = "Price") +
coord_flip() +
scale_fill_distiller(palette = "Reds",
direction = 1) +
theme_minimal() +
theme(legend.position = "none",
text = element_text(size = 17))
}
else(
return('Sorry, there is no information about the wines of this country available here.'))
}
boxPlot("US")
boxPlot <- function(input_country){
if(input_country %in% wine$country) {
data <- wine %>%
filter(country == input_country) %>%
filter(!is.na(country))
data %>%
mutate(points = factor(points,
levels = sort(unique(points)))) %>%
ggplot(aes(x = points,
y = price)) +
geom_boxplot(aes(fill = as.numeric(as.character(points)))) +
scale_y_sqrt() +
labs(x = "Point",
y = "Price") +
coord_flip() +
scale_fill_distiller(palette = "Reds",
direction = 1) +
theme_minimal() +
theme(legend.position = "none",
text = element_text(size = 17))
}
else(!input_country %in% wine$country) {
boxPlot <- function(input_country){
if(input_country %in% wine$country) {
data <- wine %>%
filter(country == input_country) %>%
filter(!is.na(country))
data %>%
mutate(points = factor(points,
levels = sort(unique(points)))) %>%
ggplot(aes(x = points,
y = price)) +
geom_boxplot(aes(fill = as.numeric(as.character(points)))) +
scale_y_sqrt() +
labs(x = "Point",
y = "Price") +
coord_flip() +
scale_fill_distiller(palette = "Reds",
direction = 1) +
theme_minimal() +
theme(legend.position = "none",
text = element_text(size = 17))
}
else(
data <- wine
data %>%
boxPlot <- function(input_country){
if(input_country %in% wine$country) {
data <- wine %>%
filter(country == input_country) %>%
filter(!is.na(country))
data %>%
mutate(points = factor(points,
levels = sort(unique(points)))) %>%
ggplot(aes(x = points,
y = price)) +
geom_boxplot(aes(fill = as.numeric(as.character(points)))) +
scale_y_sqrt() +
labs(x = "Point",
y = "Price") +
coord_flip() +
scale_fill_distiller(palette = "Reds",
direction = 1) +
theme_minimal() +
theme(legend.position = "none",
text = element_text(size = 17))
}
else(wine%>%
mutate(points = factor(points,
levels = sort(unique(points)))) %>%
ggplot(aes(x = points,
y = price)) +
geom_boxplot(aes(fill = as.numeric(as.character(points)))) +
scale_y_sqrt() +
labs(x = "Point",
y = "Price") +
coord_flip() +
scale_fill_distiller(palette = "Reds",
direction = 1) +
theme_minimal() +
theme(legend.position = "none",
text = element_text(size = 17)))
}
boxPlot("F")
#' @export
boxPlot <- function(input_country){
if(input_country %in% wine$country) {
data <- wine %>%
filter(country == input_country) %>%
filter(!is.na(country))
data %>%
mutate(points = factor(points,
levels = sort(unique(points)))) %>%
ggplot(aes(x = points,
y = price)) +
geom_boxplot(aes(fill = as.numeric(as.character(points)))) +
scale_y_sqrt() +
labs(x = "Point",
y = "Price") +
coord_flip() +
scale_fill_distiller(palette = "Reds",
direction = 1) +
theme_minimal() +
theme(legend.position = "none",
text = element_text(size = 17))
}
else(wine%>%
mutate(points = factor(points,
levels = sort(unique(points)))) %>%
ggplot(aes(x = points,
y = price)) +
geom_boxplot(aes(fill = as.numeric(as.character(points)))) +
scale_y_sqrt() +
labs(x = "Point",
y = "Price") +
coord_flip() +
scale_fill_distiller(palette = "Reds",
direction = 1) +
theme_minimal() +
theme(legend.position = "none",
text = element_text(size = 17)))
}
boxPlot("y")
boxPlot("US")
devtools::document()
devtools::install()
library(wine)
wine::boxPlot("US")
wine::point_price("US")
devtools::document()
wine::boxPlot("US")
library(wine)
wine::point_price("US")
devtools::document()
wine::point_price("US")
devtools::document()
wine::boxPlot("US")
devtools::document()
wine::boxPlot("US")
devtools::document()
wine::boxPlot("US")
wine::boxPlot("hh")
?boxplot
devtools::document()
?boxplot
devtools::document()
?boxplot
devtools::document()
test_that("point_price", {
expect_equal(point_price("US"), EXPECTED_POINT_PRICE_OUTPUT)
})
# This file is part of the standard setup for testthat.
# It is recommended that you do not modify it.
#
# Where should you do additional test configuration?
# Learn more about the roles of various files in:
# * https://r-pkgs.org/tests.html
# * https://testthat.r-lib.org/reference/test_package.html#special-files
library(testthat)
library(wine)
test_check("wine")
test_that("point_price", {
expect_equal(point_price("US"), EXPECTED_POINT_PRICE_OUTPUT)
})
test_that("point_price", {
expect_equal(point_price("US"), return(out))
})
test_that("point_price", {
expect_equal(point_price("US"), return("US"))
})
test_that("point_price", {
expect_s3_class(point_price, "function(w)")
})
point_price("US")
test_that("point_price work", {
point_price <- function(w) {
`%>%` <- magrittr::`%>%`
if(w %in% wine$country) {
out <- wine %>%
dplyr::select(country, points, price) %>%
dplyr::filter(!is.na(country)) %>%
dplyr::group_by(country) %>%
dplyr::summarise(points = mean(points, na.rm = T),
price = mean(price, na.rm = T)) %>%
dplyr::filter(country == w)
return(out) }
}
expect_equal(tibble(point_price("US")[2]), points = 88.6)
})
test_that("point_price work", {
point_price <- function(w) {
`%>%` <- magrittr::`%>%`
if(w %in% wine$country) {
out <- wine %>%
dplyr::select(country, points, price) %>%
dplyr::filter(!is.na(country)) %>%
dplyr::group_by(country) %>%
dplyr::summarise(points = mean(points, na.rm = T),
price = mean(price, na.rm = T)) %>%
dplyr::filter(country == w)
return(out) }
}
expect_equal(tibble::tibble(point_price("US")[2]), points = 88.6)
})
test_that("point_price work", {
point_price("US")
expect_equal(point_price$points, 88.6)
})
test_that("point_price work", {
point_price("US")
expect_equal(point_price(tibble[2]), 88.6)
})
test_that("point_price work", {
point_price("US")
expect_equal(point_price(tibble::tibble[2]), 88.6)
})
test_that("point_price work", {
point_price("US")
expect_equal(point_price()$points, 88.6)
})
test_that("point_price work", {
point_price(w = "US")
expect_equal(point_price()$points, 88.6)
})
test_that("point_price work", {
point_price(w = "US"),
test_that("point_price work", {
point_price(w = "US")
expect_equal(point_price()$points, "88.6")
})
test_that("point_price work", {
point_price(w = "US")
expect_equal(point_price()$points, "88.6")
})
test_that("point_price work", {
point_price(w = "US")
expect_true(point_price()$points, "88.6")
})
test_that("point price work", {
point_price(w = "US")
expect_equal(point_price()$points, "88.6")
})
test_that("point price work", {
#  point_price(w = "US")
expect_equal(point_price(w = "US")$points, "88.6")
})
test_that("point price work", {
#  point_price(w = "US")
expect_equal(point_price(w = "US")$points, 88.6)
})
test_that("point price work", {
#  point_price(w = "US")
expect_equal(point_price(w = "US")$points, 88.56)
})
point_price("China")
test_that("point price work", {
#  point_price(w = "US")
expect_equal(point_price(w = "China")$points, 89)
})
devtools::document()
usethis::use_package(boxPlot)
usethis::use_package("boxPlot")
devtools::document()
devtools::document()
devtools::document()
wine::myapp()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(wine)
wine::boxPlot("US")
library(wine)
wine::point_price("US")
library(wine)
wine::point_price("US")
.rs.restartR()
library(wine)
wine::point_price("US")
devtools::document()
library(wine)
devtools::install()
.rs.restartR()
library(wine)
wine::point_price("US")
wine::boxPlot("US")
wine::point_price("US")
devtools::document()
devtools::install()
.rs.restartR()
library(wine)
wine::point_price("US")
devtools::document()
devtools::install()
.rs.restartR()
library(wine)
wine::point_price("US")
usethis::use_vignette()
usethis::use_vignette("intro")
devtools::document()
devtools::install()
.rs.restartR()
library("wine")
wine::boxPlot("world")
library(wine)
library(wine)
head(wine::wine)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(wine)
head(wine)
library(wine)
wine
wine::wine
library(wine)
wine::wine %>%
head()
library(wine)
head(wine::wine)
library(wine)
head(wine::wine)
library(yang7er)
install.packages("yang7er")
library(yang7er)
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
library(wine)
wine::boxPlot("US")
devtools::document()
devtools::install()
library(wine)
wine::boxPlot("US")
devtools::document()
devtools::install()
library(wine)
devtools::document()
devtools::install()
devtools::document()
devtools::install()
#' @param input_country A character of country of wine origin.If the `input_country` is in the dataset, a box plot of wine prices and points for that country is generated. If the `input_country` is not in the dataset, or if an incorrect country is input, the box plot will be generated with all wine prices and points in the dataset.
#'
#' @return
#' A `ggplot` object. The plot of wine prices and points.
#'
#' @examples
#' boxPlot("US")
#' boxPlot("world")
#'
#' @export
boxPlot <- function(input_country){
`%>%` <- magrittr::`%>%`
if(input_country %in% wine$country) {
data <- wine %>%
dplyr::filter(country == input_country,
!is.na(country))
data %>%
dplyr::mutate(points = factor(points,
levels = sort(unique(points)))) %>%
ggplot2::ggplot(ggplot2::aes(x = points,
y = price)) +
ggplot2::geom_boxplot(ggplot2::aes(fill = as.numeric(as.character(points)))) +
ggplot2::scale_y_sqrt() +
ggplot2::labs(x = "Point",
y = "Price") +
ggplot2::coord_flip() +
ggplot2::scale_fill_distiller(palette = "Reds",
direction = 1) +
ggplot2::theme_minimal() +
ggplot2::theme(legend.position = "none",
text = ggplot2::element_text(size = 17))
}
else(wine%>%
dplyr::mutate(points = factor(points,
levels = sort(unique(points)))) %>%
ggplot2::ggplot(ggplot2::aes(x = points,
y = price)) +
ggplot2::geom_boxplot(ggplot2::aes(fill = as.numeric(as.character(points)))) +
ggplot2::scale_y_sqrt() +
ggplot2::labs(x = "Point",
y = "Price") +
ggplot2::coord_flip() +
ggplot2::scale_fill_distiller(palette = "Reds",
direction = 1) +
ggplot2::theme_minimal() +
ggplot2::theme(legend.position = "none",
text = ggplot2::element_text(size = 17)))
}
library(wine)
wine::boxPlot("US")
devtools::document()
devtools::docum
devtools::document()
